{%- liquid assign heading = 'rgba(var(--color-foreground), 0.75)' -%}
{%- liquid assign checkbox_color = "#0D9B13" -%}
{%- liquid assign checkbox_background_color = "#FFFFFF" -%}
{%- liquid assign fontsize = 16-%}
{%- liquid assign checkbox_size = 28 -%}
{%- liquid assign checkbox_width = 60 -%}
{%- liquid assign checkbox_border_radius = 15 -%}

{%- liquid assign has_rki_discount = true -%}

{% assign rki_discount = "RKI:15" | split: ":" | last | times: 1.00000000 %}

{%- capture form_id -%}AddToCartForm-{{ section_id }}{%- endcapture -%}
{%- form 'product', product, id: form_id, class: 'product-single__form' -%}
  {% comment %}
    Automatically inserted by Shop Pay Installments theme updater
  {% endcomment %}
  {% unless settings.disable_autogenerated_payment_terms %}
    {{ form | payment_terms }}
  {% endunless %}
  {%- unless product.has_only_default_variant -%}
    {%- for option in product.options_with_values -%}
      {%- liquid
        if settings.product_color_swatches
          assign is_color = false
          assign color_option_index = 0
          assign swatch_trigger = 'products.general.color_swatch_trigger' | t | downcase
          assign color_option_index = forloop.index0
          assign downcased_option = option.name | downcase
          if downcased_option contains swatch_trigger
            assign is_color = true
          elsif swatch_trigger == 'color' and downcased_option contains 'colour'
            assign is_color = true
          endif
        endif
      -%}

      {%- if settings.variant_type == 'button' -%}
        {%- render 'variant-button',
          section_id: section_id,
          option: option,
          forloop: forloop,
          is_color: is_color,
          color_option_index: color_option_index
        -%}
      {%- else -%}
        {%- render 'variant-dropdown',
          section_id: section_id,
          option: option,
          forloop: forloop
        -%}
      {%- endif -%}
    {%- endfor -%}
  {%- endunless -%}

  <select name="id" id="ProductSelect-{{ section_id }}" class="product-single__variants no-js">
    {%- for variant in product.variants -%}
      {%- if variant.available -%}
        <option {% if variant == product.selected_or_first_available_variant %}
          selected="selected"{% endif %}
          value="{{ variant.id }}">
          {{ variant.title }} - {{ variant.price | money_with_currency }}
        </option>
      {%- else -%}
        <option disabled="disabled" value="{{ variant.id }}">
          {{ variant.title }} - {{ 'products.product.sold_out' | t }}
        </option>
      {%- endif -%}
    {%- endfor -%}
  </select>

  {%- if settings.quantity_enable -%}
    <div class="product__quantity product__quantity--{{ settings.variant_type }}">
      <label for="Quantity-{{ section_id }}">{{ 'products.product.quantity' | t }}</label>
      {%- render 'quantity-input', id: section_id, qty: 1, min: 1 -%}
    </div>
  {%- endif -%}

  {%- assign inventory_visible = false -%}
  {%- if settings.inventory_enable and current_variant.inventory_management == 'shopify' -%}
    {%- if current_variant.inventory_quantity <= settings.inventory_threshold and current_variant.inventory_quantity >= 0 -%}
      {%- assign inventory_visible = true -%}
    {%- endif -%}
  {%- endif -%}

  {%- liquid
    if current_variant.inventory_quantity == 0 or current_variant.inventory_policy == 'continue'
      assign inventory_visible = false
    endif

    assign show_incoming = false
    if current_variant.incoming and inventory_visible == false and current_variant.inventory_quantity <= settings.inventory_threshold
      assign show_incoming = true
    endif
  -%}

  {%- if settings.inventory_enable -%}
    <div
      id="ProductInventory-{{ section_id }}"
      class="product__inventory{% unless inventory_visible %} hide{% endunless %}"
      >
      {%- if current_variant.available -%}
        {{ 'products.product.stock_label' | t: count: current_variant.inventory_quantity }}
      {%- endif -%}
    </div>
  {%- endif -%}

  {%- if settings.inventory_transfers_enable -%}
    <div
      id="ProductIncomingInventory-{{ section_id }}"
      class="product__inventory{% if inventory_visible %} hide{% endif %}">
      {%- if show_incoming == true -%}
        {%- if current_variant.next_incoming_date -%}
          {%- assign date = current_variant.next_incoming_date | date: format: 'date' -%}
          {%- if current_variant.available -%}
            {{ 'products.product.will_not_ship_until' | t: date: date }}
          {%- else -%}
            {{ 'products.product.will_be_in_stock_after' | t: date: date }}
          {%- endif -%}
        {%- else -%}
          {{ 'products.product.waiting_for_stock' | t }}
        {%- endif -%}
      {%- endif -%}
    </div>
  {%- endif -%}

  {%- liquid
    assign enable_dynamic_buttons = false
    if settings.enable_payment_button and template != 'product.preorder'
      assign enable_dynamic_buttons = true
    endif
  -%}

  {%- if enable_dynamic_buttons -%}
    <div class="payment-buttons">
  {%- endif -%}

    {%- liquid
      assign default_text = 'products.product.add_to_cart' | t
      assign button_text = 'products.product.add_to_cart' | t
      if template == 'product.preorder'
        assign default_text = 'products.product.preorder' | t
        assign button_text = 'products.product.preorder' | t
      endif
      unless current_variant.available
        assign button_text = 'products.product.sold_out' | t
      endunless
    -%}
 <div class="bold_qb_grid"></div>
    {% if has_rki_discount %}
      {% assign rki_discount_multiplier = 100 | minus: rki_discount | divided_by: 100.00000000 %}
      {% capture rki_discount_json %}
        {
        "discount": {{ rki_discount | json }},
        "variants": [
        {% for variant in product.variants %}
          {% assign rki_discount_price = variant.price | times: rki_discount_multiplier %}
          {
          "id": {{ variant.id | json }},
          "original_price": {
                                                      "raw": {{ variant.price | json }},
          "formatted": {{ variant.price | money | json }}
          },
          "discount_price": {
                                                      "raw": {{ rki_discount_price | json }},
          "formatted": {{ rki_discount_price | money | json }}
          },
          "discount": {
                                                      "raw": {{ variant.price | minus: rki_discount_price | json }},
          "formatted": {{ variant.price | minus: rki_discount_price | money | json }}
          }
          }{%- unless forloop.last -%},
          {%- endunless -%}
        {% endfor %}
        ]
        }
      {% endcapture %}
    {% endif %}
    {% if has_rki_discount %}
      {%- for varient in product.variants -%}
        <div class="rki" 
          data-rki-widget='product' 
          data-heading = {{ heading }} 
          data-checkbox_color = {{ checkbox_color }} 
          data-fontsize = {{ fontsize }} 
          data-checkbox_size = {{ checkbox_size }} 
          data-checkbox_border_radius = {{ checkbox_border_radius }}  
          data-rki-id='{{ product.id }}' 
          data-rki-variant-id='{{ varient.id }}' 
          data-rki-tags='{{ product.tags }}' 
          data-rki-discount-json='{{ rki_discount_json | strip }}'>
        </div>
      {%- endfor -%}
      <style>
        .rki__checkbox .rki__checkbox-ui {
            position: relative;
            font-size: 16px;
            text-align: center;
            color: {{ heading }} !important;
            overflow: hidden;
            top: 4px;
            height: {{ checkbox_size }}px !important;
            width: {{ checkbox_size }}px !important;
            flex-shrink: 0;
            border: 1px solid {{ checkbox_color }} !important;
            border-radius: {{ checkbox_border_radius }}px !important;
            margin-right: 7px
        }
        .rki__label{
           font-size: {{ fontsize }}px !important;
           color: {{ heading }} !important;
        }
        /* Toggle Button */
        .rki__checkbox-input {
          -webkit-appearance: none;
          -webkit-tap-highlight-color: transparent;
          position: relative !important;
          border: 0;
          outline: 0;
          cursor: pointer;
          height: {{ checkbox_size }}px !important;
          width: {{ checkbox_width }}px !important;
          margin-right: 10px !important;
          overflow: unset !important;
        }
        
        
        /* To create surface of toggle button */
        .rki__checkbox-input:after {
          content: '';
          height: {{ checkbox_size }}px !important;
          width: {{ checkbox_width }}px !important;
          display: inline-block;
          background: {{ checkbox_color }} !important;
                border-radius: {{ checkbox_border_radius }}px !important;
          clear: both;
                border: 4px solid rgb(var(--color-base-background-1));
        }
        
        
        /* Contents before checkbox to create toggle handle */
        .rki__checkbox-input:before {
          content: '';
          width: {{ checkbox_size }}px !important;
          height: {{ checkbox_size }}px !important;
          display: block;
          position: absolute;
          left: 0px;
          top: 0px;
          border-radius: 50%;
          background: {{ checkbox_background_color }};
          box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.6);
        }
        
        .rki__checkbox-input:after {
          background: gray !important;
        }
        
        /* Shift the handle to left on check event */
        .rki__checkbox-input:checked:before {
          left: {{ checkbox_size }}px !important;
          box-shadow: -1px 1px 3px rgba(0, 0, 0, 0.6);
        }
        /* Background color when toggle button will be active */
        .rki__checkbox-input:checked:after {
          background: {{ checkbox_color }} !important;
        }
        
        .rki__checkbox-ui {
          display:none !important;
        }
        
        /* Transition for smoothness */
        .rki__checkbox-input,
        .rki__checkbox-input:before,
        .rki__checkbox-input:after,
        .rki__checkbox-input:checked:before,
        .rki__checkbox-input:checked:after {
          transition: ease .3s;
          -webkit-transition: ease .3s;
          -moz-transition: ease .3s;
          -o-transition: ease .3s;
          display: inline-grid;
        }
        </style>
        <!-- End ReKeepIt Opt-In Selector -->
    {% endif %}
   
    <button
      {% if product.empty? %}type="button"{% else %}type="submit"{% endif %}
      name="add"
      id="AddToCart-{{ section_id }}"
      class="btn btn--full add-to-cart{% if enable_dynamic_buttons and product.selling_plan_groups == empty %} btn--secondary{% endif %}"
      {% unless current_variant.available %} disabled="disabled"{% endunless %}>
      <span id="AddToCartText-{{ section_id }}" data-default-text="{{ default_text }}">
        {{ button_text }}
      </span>
    </button>

    {%- if enable_dynamic_buttons -%}
      {{ form | payment_button }}
    {%- endif -%}

  {%- if enable_dynamic_buttons -%}
    </div>
  {%- endif -%}

  <textarea id="VariantsJson-{{ section_id }}" class="hide" aria-hidden="true" aria-label="Product JSON">
    {{ product.variants | json }}
  </textarea>
  {%- if product.options.size > 1 -%}
    <textarea id="CurrentVariantJson-{{ section_id }}" class="hide" aria-hidden="true" aria-label="Variant JSON">
      {{ current_variant | json }}
    </textarea>
  {%- endif -%}
{% render 'ZooomyBackinStock' %}

{%- endform -%}